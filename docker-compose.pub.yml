services:
  postgres:
    image: postgres:16.4
    container_name: postgres
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./docker-init.sql:/docker-entrypoint-initdb.d/docker-init.sql
    ports:
      - 5432:5432
    networks:
      - webnet
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4:7.2
    container_name: pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - 8080:80
    restart: always
    networks:
      - webnet

  frontend:
    image: 'ghcr.io/romtomgreat/film-react-nest_frontend:latest'
    container_name: frontend
    environment:
      VITE_API_URL: http://romtomgreat.nomorepartiesco.ru/api/afisha
      VITE_CDN_URL: http://romtomgreat.nomorepartiesco.ru/content/afisha
    volumes:
      - frontend_build:/app/dist
    networks:
      - webnet

  backend:
    image: 'ghcr.io/romtomgreat/film-react-nest_backend:latest'
    container_name: backend
    environment:
      PORT: 3000
      DEBUG: ${DEBUG}
      DATABASE_DRIVER: 'postgres'
      DATABASE_URL: 'postgres://postgres:5432/films'
      DATABASE_USERNAME: ${POSTGRES_USER}
      DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - 3000:3000
    depends_on:
      - postgres
    networks:
      - webnet

  nginx:
    image: nginx
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - frontend_build:/var/www/frontend:ro
    ports:
      - 80:80
      - 443:443
    depends_on:
      - frontend
      - backend
    restart: always
    networks:
      - webnet

volumes:
  db_data:
  pgadmin-data:
  frontend_build:

networks:
  webnet: